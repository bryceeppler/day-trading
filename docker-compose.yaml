version: "3.9"

services:
  # React Frontend
  react:
    build: ./client
    ports:
      - "3000:3000"
    depends_on:
      - ms_user
      - ms_order_execution
      - ms_order_creation
      - ms_matching_engine
      - ms_market_data
      - ms_transaction_manager
    command: [ "npm", "start" ]

  # RabbitMQ Service
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.8-management-alpine
    ports:
      - "5672:5672" # RabbitMQ connection
      - "15672:15672" # RabbitMQ management UI
    volumes:
      - "rabbitmq_data:/var/lib/rabbitmq" # persistance 
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 3

  # User & Auth Microservice
  ms_user:
    container_name: user
    build: ./ms_user
    image: ms_user
    ports:
      - "8001:3000"
    environment:
      MONGO_URI: mongodb://mongodb:mongodb@mongo:27017/db
      JWT_SECRET: pHilAeFUQvOssCWnfzobwewx27HGVgXJOO1r4kTYJGw=
      BCRYPT_SALT_ROUNDS: 12
    volumes:
      - ./ms_shared:/app/shared

  # Order Execution Microservice
  ms_order_execution:
    container_name: order_execution
    build: ./ms_order_execution
    # ports:
    #   - "8002:3000"
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      MONGO_URI: mongodb://mongodb:mongodb@mongo:27017/db
      RABBITMQ_URI: amqp://guest:guest@rabbitmq:5672/
    volumes:
      - ./ms_shared:/app/shared

  # Order Creation Microservice
  ms_order_creation:
    container_name: order_creation
    build: ./ms_order_creation
    expose:
      - "3000"
    ports:
      - "8003:3000"
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./ms_shared:/app/shared
    environment:
      MONGO_URI: mongodb://mongodb:mongodb@mongo:27017/db
      JWT_SECRET: pHilAeFUQvOssCWnfzobwewx27HGVgXJOO1r4kTYJGw=
      MATCHING_ENGINE_URL: "http://ms_matching_engine:3000"
      RABBITMQ_URI: amqp://guest:guest@rabbitmq:5672/
      NODE_ENV: production
    command: [ "npm", "start" ]

  # Matching Engine Microservice
  ms_matching_engine:
    container_name: matching_engine
    build: ./ms_matching_engine
    ports:
      - "8004:3000"
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      MONGO_URI: mongodb://mongodb:mongodb@mongo:27017/db
      NODE_ENV: production
      RABBITMQ_URI: amqp://guest:guest@rabbitmq:5672/
    command: [ "npm", "start" ]
    volumes:
      - ./ms_shared:/app/shared

  # Market Data Microservice
  ms_market_data:
    container_name: market_data
    build: ./ms_market_data
    ports:
      - "8005:3000"
    environment:
      MONGO_URI: mongodb://mongodb:mongodb@mongo:27017/db
      JWT_SECRET: pHilAeFUQvOssCWnfzobwewx27HGVgXJOO1r4kTYJGw=
    volumes:
      - ./ms_shared:/app/shared

  # Audit Manager Microservice
  ms_transaction_manager:
    container_name: transaction_manager
    build: ./ms_transaction_manager
    ports:
      - "8006:3000"
    environment:
      MONGO_URI: mongodb://mongodb:mongodb@mongo:27017/db
      JWT_SECRET: pHilAeFUQvOssCWnfzobwewx27HGVgXJOO1r4kTYJGw=
    volumes:
      - ./ms_shared:/app/shared

  mongo:
    container_name: mongo
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongodb
      MONGO_INITDB_ROOT_PASSWORD: mongodb
    volumes:
      - db_data:/data/db

volumes:
  db_data:
  rabbitmq_data:
